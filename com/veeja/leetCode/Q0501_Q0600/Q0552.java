package com.veeja.leetCode.Q0501_Q0600;

/**
 * TODO unfinished
 *
 * 552. 学生出勤记录 II
 *
 * 可以用字符串表示一个学生的出勤记录，其中的每个字符用来标记当天的出勤情况（缺勤、迟到、到场）。记录中只含下面三种字符：
 * <p>
 * 'A'：Absent，缺勤
 * 'L'：Late，迟到
 * 'P'：Present，到场
 * 如果学生能够 同时 满足下面两个条件，则可以获得出勤奖励：
 * <p>
 * 按 总出勤 计，学生缺勤（'A'）严格 少于两天。
 * 学生 不会 存在 连续 3 天或 连续 3 天以上的迟到（'L'）记录。
 * 给你一个整数 n ，表示出勤记录的长度（次数）。请你返回记录长度为 n 时，可能获得出勤奖励的记录情况 数量 。答案可能很大，所以返回对 109 + 7 取余 的结果。
 * <p>
 * 示例 1：
 * 输入：n = 2
 * 输出：8
 * 解释：
 * 有 8 种长度为 2 的记录将被视为可奖励：
 * "PP" , "AP", "PA", "LP", "PL", "AL", "LA", "LL"
 * 只有"AA"不会被视为可奖励，因为缺勤次数为 2 次（需要少于 2 次）。
 * <p>
 * 示例 2：
 * 输入：n = 1
 * 输出：3
 * 示例 3：
 * <p>
 * 输入：n = 10101
 * 输出：183236316
 */
public class Q0552 {
    public int checkRecord(int n) {


        return 0;
    }
}

/*
相对于 LC 551，这个题目的难度陡然提升，甚至这两个题目本身除了套用一套设定之外，题目类型、解题思路都毫无关联。

不过既然是动态规划。

我们就尝试来打表吧。

我暂时的设定为，DP[i]为可能性数量，i为长度。

```
i  | DP[i]
0  |
1  |
2  |
...
```

首先是DP[1]，长度为1，只有三种可能性，P、A、L。

而这三种可能性，都不会有连续三个L，或者两个A。

所以DP[1] = 3。

更新一下表格：

```
i  | DP[i]
0  |     3
1  |
2  |
...
```

接下来是DP[2]，长度为2，并且有9种可能性。

```
AA AL AP
LA LL LP
PA PL PP
```

除了 AA 之外，其他的都是合法的。 所以DP[2] = 8。

更新一下表格：

```
i  | DP[i]
0  |     3
1  |     8
2  |
...
```

接下来是DP[3]，长度为3，并且有27种可能性。

```
AAA AAL AAP ALA ALL ALP APA APL APP
LAA LAL LAP LLA LLL LLP LPA LPL LPP
PAA PAL PAP PLA PLL PLP PPA PPL PPP
```

这里我们可以看到
LLL 是不合法的，因为有连续三个L。
带有两个 A 的 都是不合法的，其中包括了AA*、A*A、*AA。 * 有两种可能，分别是L、P。 所以有6种。
带有三个 A 的 都是不合法的，只有一种，AAA。

也就是说，只有 27 - 1 - 6 - 1 = 19 种可能性是合法的。

所以DP[3] = 19。

更新一下表格：

```
i  | DP[i]
0  |     3
1  |     8
2  |    19
3  |
...
```


 */